- hosts: localhost
  vars:
    vhosts:
      - host: example.local
        docroot: /var/www/example
    writable_paths:
      - /example/writable/path
  tasks:
    - name: Install Apache HTTP Server
      become: yes
      dnf:
        name: httpd
        state: latest
    - name: Check if Apache HTTP Server needs to access {{ansible_env.HOME}}
      set_fact:
        home_docroot: "{{vhosts | selectattr('docroot', 'match', '^' + ansible_env.HOME + '/') | list | length > 0}}"
    - name: Allow Apache HTTP Server read access to {{ansible_env.HOME}}
      file:
        path: "{{ansible_env.HOME}}"
        mode: 0711
      when: home_docroot
    - name: Get SELinux status
      command: getenforce
      register: sestatus
    - name: Configure SELinux to allow Apache HTTP Server read access to {{ansible_env.HOME}}
      become: yes
      seboolean:
        name: httpd_read_user_content
        state: yes
        persistent: yes
      when: '"Enforcing" in sestatus.stdout and home_docroot'
    - include: "includes/httpd-vhost.yaml host={{item.host}} docroot={{item.docroot}}"
      loop: "{{[] if vhosts is none else vhosts}}"
    - name: Prepare and allow Apache HTTP Server write access to writable paths
      file:
        path: "{{item}}"
        mode: 0777
        recurse: yes
        state: directory
      loop: "{{[] if writable_paths is none else writable_paths}}"
    - name: Configure SELinux to allow Apache HTTP Server write access to writable paths
      become: yes
      command: chcon -R -t httpd_sys_rw_content_t {{item}}
      loop: "{{[] if writable_paths is none else writable_paths}}"
      when: '"Enforcing" in sestatus.stdout'
    - name: Enable and restart Apache HTTP Server
      become: yes
      service:
        name: httpd
        enabled: yes
        state: restarted
